
namespace IdeSK.View;

internal static class Texts
{
    public static string GrammarHelp = "program\t\t=\tstatements\r\nstatements\t=\t{statement}\r\nstatement\t=\tvariableDeclaration ';'\r\n\t\t\t|\tfunctionDeclaration\r\n\t\t\t|\tif | for | do | while \r\n\t\t\t|\tblock | return \r\n\t\t\t|\t'break' ';' | 'continue' ';'\r\n\t\t\t|\tvariableAssignment ';'\r\n\t\t\t|\tfunctionInvocation ';'\r\n\r\nvariableDeclaration\t=\t'var' identifier ':' identifier ['=' expression]\r\nvariableAssignment\t=\tidentifier '=' expression\r\nfunctionInvocation\t=\tidentifier '(' [expression {',' expression}] ')'\r\nfunctionDeclaration\t=\t'fun' identifier '(' paramsDeclaration ')' ':' identifier block\r\nparamsDeclaration\t=\t[identifier ':' identifier {',' identifier ':' identifier}]\r\nreturn\t\t=\t'return' expression ';'\r\nblock\t\t=\t'{' statements '}'\r\n\r\nif\t\t=\t'if' '(' expression ')' statement {'else' 'if' '(' expression ')' statement} ['else' statement]\r\nfor\t\t=\t'for' '(' identifier 'in' expression 'until' expression  ')' statement\r\nwhile\t\t=\t'while' '(' expression ')' statement\r\ndo\t\t=\t'do' block 'while' '(' expression ')' ';'\r\n\r\nexpression \t\t=\tsecondLevel {('||' | '&&') secondLevel}\r\nsecondLevel\t\t=\tthirdLevel {('==' | '!=' | '<=' | '>=' | '<' | '>') thirdLevel}\r\nthirdLevel\t\t=\t[('+' | '-' | '!')] fourthLevel {('+' | '-') fourthLevel}\r\nfourthLevel\t\t=\tfifthLevel {('*' | '/') fifthLevel}\r\nfifthLevel\t\t=\tsixthLevel {'%' sixthLevel}\r\nsixthLevel\t\t=\tfunctionInvocation | value | identifier | '(' expression ')'\r\n\r\nidentifier\t\t=\t/[a-zA-Z_][a-zA-Z0-9_]*/\r\nvalue\t\t=\tbool | number | string\r\nstring\t\t=\t/[\"].*[\"]/\r\nnumber\t\t=\t/[0-9]+([.][0-9]+)?/\r\nbool\t\t=\t'true' | 'false'";
    public static string LibraryHelp = "print( String )\t\t\t: Void\t\t- writes given String to the console\r\nprintLn( String )\t\t\t: Void\t\t- writes given String (with end of line) to the console\r\nreadLn( )\t\t\t\t: String\t\t- reads String from the console\r\n\r\nboolToStr( Boolean )\t\t: String\t\t- converts Boolean to String\r\nintToStr( Int )\t\t\t: String\t\t- converts Int to String\r\ndoubleToStr( Double )\t\t: String\t\t- converts Double to String\r\nstrToBool( String )\t\t\t: Boolean\t- converts String to Boolean\r\nstrToInt( String )\t\t\t: Int\t\t- converts String to Int\r\nstrToDouble( String )\t\t: Double\t\t- converts String to Double\r\n\r\nstrIndex( String, Int )\t\t: String\t\t- returns character from the String on position of the Int\r\nstrLen( String )\t\t\t: Int\t\t- returns length of the String\r\n";
}
